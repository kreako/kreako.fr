---
import BaseLayout from '../layouts/BaseLayout.astro';
import Ressource from '../components/Ressource.jsx'
import { Contents } from '../components/content.mjs'

export async function getStaticPaths() {
  const contents = await Contents.fetch()
  await contents.addMarkdownDescription()

  let params = contents.datas.map(x => {
    const dt = x.dt_created_at
    return {year: String(dt.getFullYear()), month: String(dt.getMonth() + 1).padStart(2, "0"), ressource: x}
  })
  // Filter duplicate values and groups ressources by year/month
  const uniq = []
  const previous = {year: null, month: null}
  let p = null
  for (const param of params) {
    if (param.year !== previous.year || param.month !== previous.month) {
      if (p != null) {
        p.olderUrl = `/blog-${param.year}-${param.month}`
        uniq.push(p)
      }
      const newerUrl = previous.year == null ? null : `/blog-${previous.year}-${previous.month}`
      p = {year: param.year, month: param.month, ressources: [param.ressource], newerUrl : newerUrl, olderUrl: null}
      previous.year = param.year
      previous.month = param.month
    } else {
      p.ressources.push(param.ressource)
    }
  }
  if (p != null) {
    uniq.push(p)
  }
  return uniq.map(x => {
    return {
      "params": {year: x.year, month: x.month},
      props: {
        ressources: x.ressources,
        newerUrl: x.newerUrl,
        olderUrl: x.olderUrl,
      }
    }
  });
}

const {year, month} = Astro.request.params;
const { ressources, newerUrl, olderUrl } = Astro.props;

function Newer() {
  let previous = <div></div>;
  if (newerUrl != null) {
    previous = (
      <a href={newerUrl} class="font-bold uppercase tracking-wider text-purple-600">
        Newer
      </a>
    )
  }
  return previous
}

function Older() {
  let next = <div></div>;
  if (olderUrl != null) {
    next = (
      <a href={olderUrl} class="font-bold uppercase tracking-wider text-purple-600">
        Older
      </a>
    )
  }
  return next
}
---
<BaseLayout title={`Blog ${year}-${month}`}>
  <section class="px-2 mt-8 max-w-screen-md">
    {ressources.map(c => (
      <div class="">
        <Ressource content={c}/>
      </div>
    ))}
  </section>
  <section class="px-2 my-8 max-w-screen-md">
    <div class="flex flex-row justify-center space-x-4">
      <Older/>
      <Newer/>
    </div>
  </section>
</BaseLayout>
